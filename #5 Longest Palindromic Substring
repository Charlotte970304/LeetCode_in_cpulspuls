class Solution {
public:
    bool is_Palindromic(string str){
        for (int i=0; i<(str.length()/2); i++)
        {
            if(str[i] != str[str.length()-i-1])
                return false;
        }
        return true;
    }
    string longestPalindrome(string s) {
        string ans,sub;
        int longest=0;
        for(int i=longest;i<s.length();i++)
        {
            for(int j=longest;i-j>=0&&i+j<=s.length();j++)//even palindromic
            {
                sub.assign(s,i-j,2*j);
                if(is_Palindromic(sub))
                    longest=j,ans=sub;
                else
                    break;
            }
        }
        for(int i=longest;i<s.length();i++)
        {
            for(int j=longest;i-j>=0&&i+j<s.length();j++)//odd palindromic
            {
                sub.assign(s,i-j,2*j+1);
                if(is_Palindromic(sub))
                    longest=j,ans=sub;
                else
                    break;
            }
        }
        return ans;
    }
};
